{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable><variable type=\"\" id=\"p]k:%FAw]NYX||*,YELW\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">breaktime</variable><variable type=\"\" id=\"wtYlAl4.B8prRP56eQnO\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">action</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"-50\" y=\"190\"><next><block type=\"v5_looks_set_font\" id=\"3i=h.r*@tja=w!k%c}ln\"><field name=\"FONT\">mono30</field><next><block type=\"v5_looks_print\" id=\"e26{F.}n?yKxB,-XQTX~\"><field name=\"TARGET\">Brain</field><value name=\"DATA\"><shadow type=\"text\" id=\",)}zpSzRwz_KC*x9Y]hT\"><field name=\"TEXT\">Vex It!</field></shadow></value></block></next></block></next></block><block type=\"v5_control_forever\" id=\"6JOkcu(uytw](-aYgUy/\" x=\"450\" y=\"370\"><statement name=\"SUBSTACK\"><block type=\"v5_control_if_then\" id=\"#=p3KG8]h#L,jt9:~j$?\"><value name=\"CONDITION\"><block type=\"v5_sensing_pressing_controller\" id=\"yZ.aRL,T%^^4/uWP0PPS\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonA</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_looks_controller_play_rumble\" id=\"*#y8)b(UI(=8uj+Gldd~\"><field name=\"PATTERN\">-.-.</field><field name=\"CONTROLLER\">Controller1</field><next><block type=\"v5_looks_print\" id=\"}?IG0/#T/wfr*)5B6@Z;\"><field name=\"TARGET\">Controller1</field><value name=\"DATA\"><shadow type=\"text\" id=\":@#):hCBiuo@z/]kDD?h\"><field name=\"TEXT\">Game Over</field></shadow></value></block></next></block></statement></block></statement></block><block type=\"v5_variables_variable\" id=\"M@Ix?ZdT`8;b(3Z0$s9W\" x=\"90\" y=\"490\"><field name=\"VARIABLE\" id=\"wtYlAl4.B8prRP56eQnO\" variabletype=\"\">action</field></block><block type=\"v5_operator_random\" id=\"*pL7wR~P[SV+b23ZlI,:\" x=\"450\" y=\"710\"><value name=\"FROM\"><shadow type=\"math_number\" id=\"nU%2AthTsN`QpWX$i._]\"><field name=\"NUM\">1</field></shadow></value><value name=\"TO\"><shadow type=\"math_number\" id=\"iEot*0.ViPgoruWO+R{H\"><field name=\"NUM\">5</field></shadow></value></block></xml>","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"}}],"slot":0,"platform":"V5","sdkVersion":"","appVersion":"","fileFormat":"1.0.0","icon":"","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\n\n\n\n// Generated code.\n\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0, Controller1_precision = 0;\n\nfloat myVariable, breaktime, action;\n\n// \"when started\" hat block\nint whenStarted1() {\n  Brain.Screen.setFont(mono30);\n  Brain.Screen.print(\"Vex It!\");\n  return 0;\n}\n\n\nint main() {\n  // initialize the random number system\n  srand(Brain.Timer.system());\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}"}